pipeline{
    agent any
    stages {
        stage("create an EKS cluster"){
            steps{
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-crendentails-psinha']]){
                dir('terraform'){
                sh "terraform init"
                sh "terraform plan"
                sh "terraform apply -auto-approve"
                }
                }
            }
        }
        stage ("deploy to eks"){
            steps{
                sshagent(['33027ffa-0256-4d9b-846a-3b6f27864997']) {
            dir('kubernetes'){
             sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.28.160 touch hello.txt"
             sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.28.160 aws  eks update-kubeconfig --name myapp-eks-cluster"
             sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.28.160 kubectl  apply -f nginx-deployment.yaml"
             sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.28.160 kubectl  apply -f nginx-service.yaml"
            }
            }
            }
        }
        
    }
}
